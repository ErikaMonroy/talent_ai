{
  "openapi": "3.1.0",
  "info": {
    "title": "TalentAI Backend API",
    "description": "API robusta para predicción de áreas de conocimiento y recomendación de programas académicos",
    "version": "1.0.0"
  },
  "paths": {
    "/api/v1/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Health Check",
        "description": "Basic health check endpoint",
        "operationId": "health_check_api_v1_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    },
    "/api/v1/health/detailed": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Detailed Health Check",
        "description": "Detailed health check including database connectivity",
        "operationId": "detailed_health_check_api_v1_health_detailed_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    },
    "/api/v1/health/readiness": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Readiness Check",
        "description": "Kubernetes readiness probe endpoint",
        "operationId": "readiness_check_api_v1_health_readiness_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    },
    "/api/v1/health/liveness": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Liveness Check",
        "description": "Kubernetes liveness probe endpoint",
        "operationId": "liveness_check_api_v1_health_liveness_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dataset/status": {
      "get": {
        "tags": [
          "Dataset"
        ],
        "summary": "Get Dataset Status",
        "description": "Get current dataset status and statistics",
        "operationId": "get_dataset_status_api_v1_dataset_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetStatus"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dataset/generate": {
      "post": {
        "tags": [
          "Dataset"
        ],
        "summary": "Generate Dataset",
        "description": "Generate or update training dataset",
        "operationId": "generate_dataset_api_v1_dataset_generate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatasetGenerationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dataset/validate": {
      "post": {
        "tags": [
          "Dataset"
        ],
        "summary": "Validate Dataset",
        "description": "Validate dataset integrity and format",
        "operationId": "validate_dataset_api_v1_dataset_validate_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    },
    "/api/v1/training/models": {
      "get": {
        "tags": [
          "Training"
        ],
        "summary": "List Available Models",
        "description": "List all available model versions",
        "operationId": "list_available_models_api_v1_training_models_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    },
    "/api/v1/training/knn": {
      "post": {
        "tags": [
          "Training"
        ],
        "summary": "Train Knn Model",
        "description": "Train KNN model",
        "operationId": "train_knn_model_api_v1_training_knn_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrainingRequestKNN"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/training/neural-network": {
      "post": {
        "tags": [
          "Training"
        ],
        "summary": "Train Neural Network",
        "description": "Train Neural Network model",
        "operationId": "train_neural_network_api_v1_training_neural_network_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TrainingRequestNN"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TrainingResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/training/status/{model_type}": {
      "get": {
        "tags": [
          "Training"
        ],
        "summary": "Get Training Status",
        "description": "Get training status for a specific model type",
        "operationId": "get_training_status_api_v1_training_status__model_type__get",
        "parameters": [
          {
            "name": "model_type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Model Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/predictions/predict": {
      "post": {
        "tags": [
          "Predictions"
        ],
        "summary": "Make Prediction",
        "description": "Make prediction for user input",
        "operationId": "make_prediction_api_v1_predictions_predict_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PredictionInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PredictionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/predictions/history/{user_email}": {
      "get": {
        "tags": [
          "Programs"
        ],
        "summary": "Get Prediction History",
        "description": "Get all previous predictions for a given user email with pagination.\nReturns detailed information about each prediction including input data and results.",
        "operationId": "get_prediction_history_api_v1_predictions_history__user_email__get",
        "parameters": [
          {
            "name": "user_email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Email"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of predictions per page",
              "default": 20,
              "title": "Limit"
            },
            "description": "Number of predictions per page"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of predictions to skip",
              "default": 0,
              "title": "Offset"
            },
            "description": "Number of predictions to skip"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/predictions/stats": {
      "get": {
        "tags": [
          "Predictions"
        ],
        "summary": "Get Prediction Stats",
        "description": "Get prediction statistics",
        "operationId": "get_prediction_stats_api_v1_predictions_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    },
    "/api/v1/predictions/{prediction_id}": {
      "delete": {
        "tags": [
          "Predictions"
        ],
        "summary": "Delete Prediction",
        "description": "Delete a specific prediction",
        "operationId": "delete_prediction_api_v1_predictions__prediction_id__delete",
        "parameters": [
          {
            "name": "prediction_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Prediction Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/programs/search": {
      "get": {
        "tags": [
          "Programs"
        ],
        "summary": "Search Programs Advanced",
        "description": "Advanced program search with multiple optional filters and pagination.\nSupports filtering by area_id, location (city, department), academic_level, and name similarity.",
        "operationId": "search_programs_advanced_api_v1_programs_search_get",
        "parameters": [
          {
            "name": "area_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by knowledge area ID",
              "title": "Area Id"
            },
            "description": "Filter by knowledge area ID"
          },
          {
            "name": "city",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by city",
              "title": "City"
            },
            "description": "Filter by city"
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by department",
              "title": "Department"
            },
            "description": "Filter by department"
          },
          {
            "name": "academic_level",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by academic level",
              "title": "Academic Level"
            },
            "description": "Filter by academic level"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search by program name (similarity)",
              "title": "Name"
            },
            "description": "Search by program name (similarity)"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of results per page",
              "default": 50,
              "title": "Limit"
            },
            "description": "Number of results per page"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of results to skip",
              "default": 0,
              "title": "Offset"
            },
            "description": "Number of results to skip"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/programs/areas": {
      "get": {
        "tags": [
          "Programs"
        ],
        "summary": "List Knowledge Areas",
        "description": "List all available knowledge areas with pagination",
        "operationId": "list_knowledge_areas_api_v1_programs_areas_get",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "description": "Number of areas per page",
              "default": 100,
              "title": "Limit"
            },
            "description": "Number of areas per page"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of areas to skip",
              "default": 0,
              "title": "Offset"
            },
            "description": "Number of areas to skip"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/programs/filters": {
      "get": {
        "tags": [
          "Programs"
        ],
        "summary": "Get Available Filters",
        "description": "Get all available filter options for program search",
        "operationId": "get_available_filters_api_v1_programs_filters_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "description": "Root endpoint",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AreaPrediction": {
        "properties": {
          "area": {
            "type": "string",
            "title": "Area"
          },
          "area_id": {
            "type": "integer",
            "title": "Area Id",
            "description": "ID del área de conocimiento para filtrado"
          },
          "percentage": {
            "type": "number",
            "maximum": 100,
            "minimum": 0,
            "title": "Percentage"
          },
          "confidence": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1,
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Confidence"
          }
        },
        "type": "object",
        "required": [
          "area",
          "area_id",
          "percentage"
        ],
        "title": "AreaPrediction"
      },
      "DatasetGenerationRequest": {
        "properties": {
          "num_students": {
            "type": "integer",
            "maximum": 50000,
            "minimum": 100,
            "title": "Num Students",
            "description": "Number of synthetic students to generate",
            "default": 1000
          },
          "save_to_database": {
            "type": "boolean",
            "title": "Save To Database",
            "description": "Whether to save generated data to database",
            "default": true
          },
          "overwrite_existing": {
            "type": "boolean",
            "title": "Overwrite Existing",
            "description": "Whether to overwrite existing data",
            "default": false
          }
        },
        "type": "object",
        "title": "DatasetGenerationRequest",
        "description": "Dataset generation request"
      },
      "DatasetStatus": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "total_records": {
            "type": "integer",
            "title": "Total Records"
          },
          "csv_records": {
            "type": "integer",
            "title": "Csv Records",
            "default": 0
          },
          "last_updated": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Updated"
          },
          "is_generating": {
            "type": "boolean",
            "title": "Is Generating",
            "default": false
          },
          "generation_progress": {
            "type": "integer",
            "title": "Generation Progress",
            "default": 0
          },
          "generation_message": {
            "type": "string",
            "title": "Generation Message",
            "default": "Ready"
          },
          "csv_exists": {
            "type": "boolean",
            "title": "Csv Exists",
            "default": false
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          }
        },
        "type": "object",
        "required": [
          "status",
          "total_records"
        ],
        "title": "DatasetStatus",
        "description": "Dataset status response"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ModelType": {
        "type": "string",
        "enum": [
          "knn",
          "neural_network"
        ],
        "title": "ModelType"
      },
      "PredictionInput": {
        "properties": {
          "user_email": {
            "type": "string",
            "format": "email",
            "title": "User Email"
          },
          "matematicas": {
            "type": "number",
            "maximum": 500,
            "minimum": 0,
            "title": "Matematicas",
            "description": "Puntaje ICFES Matemáticas (0-500)"
          },
          "lectura_critica": {
            "type": "number",
            "maximum": 400,
            "minimum": 0,
            "title": "Lectura Critica",
            "description": "Puntaje ICFES Lectura Crítica (0-500)"
          },
          "ciencias_naturales": {
            "type": "number",
            "maximum": 300,
            "minimum": 0,
            "title": "Ciencias Naturales",
            "description": "Puntaje ICFES Ciencias Naturales (0-500)"
          },
          "sociales_ciudadanas": {
            "type": "number",
            "maximum": 400,
            "minimum": 0,
            "title": "Sociales Ciudadanas",
            "description": "Puntaje ICFES Sociales y Ciudadanas (0-500)"
          },
          "ingles": {
            "type": "number",
            "maximum": 500,
            "minimum": 0,
            "title": "Ingles",
            "description": "Puntaje ICFES Inglés (0-500)"
          },
          "dimension_1_logico_matematico": {
            "type": "number",
            "maximum": 5,
            "minimum": 1,
            "title": "Dimension 1 Logico Matematico",
            "description": "Dimensión 1: Lógico Matemático (1-5)"
          },
          "dimension_2_comprension_comunicacion": {
            "type": "number",
            "maximum": 5,
            "minimum": 1,
            "title": "Dimension 2 Comprension Comunicacion",
            "description": "Dimensión 2: Comprensión y Comunicación (1-5)"
          },
          "dimension_3_pensamiento_cientifico": {
            "type": "number",
            "maximum": 5,
            "minimum": 1,
            "title": "Dimension 3 Pensamiento Cientifico",
            "description": "Dimensión 3: Pensamiento Científico (1-5)"
          },
          "dimension_4_analisis_social_humanistico": {
            "type": "number",
            "maximum": 5,
            "minimum": 1,
            "title": "Dimension 4 Analisis Social Humanistico",
            "description": "Dimensión 4: Análisis Social y Humanístico (1-5)"
          },
          "dimension_5_creatividad_innovacion": {
            "type": "number",
            "maximum": 5,
            "minimum": 1,
            "title": "Dimension 5 Creatividad Innovacion",
            "description": "Dimensión 5: Creatividad e Innovación (1-5)"
          },
          "dimension_6_liderazgo_trabajo_equipo": {
            "type": "number",
            "maximum": 5,
            "minimum": 1,
            "title": "Dimension 6 Liderazgo Trabajo Equipo",
            "description": "Dimensión 6: Liderazgo y Trabajo en Equipo (1-5)"
          },
          "dimension_7_pensamiento_critico": {
            "type": "number",
            "maximum": 5,
            "minimum": 1,
            "title": "Dimension 7 Pensamiento Critico",
            "description": "Dimensión 7: Pensamiento Crítico (1-5)"
          },
          "dimension_8_adaptabilidad_aprendizaje": {
            "type": "number",
            "maximum": 5,
            "minimum": 1,
            "title": "Dimension 8 Adaptabilidad Aprendizaje",
            "description": "Dimensión 8: Adaptabilidad y Aprendizaje (1-5)"
          },
          "model_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ModelType"
              },
              {
                "type": "null"
              }
            ],
            "default": "knn"
          }
        },
        "type": "object",
        "required": [
          "user_email",
          "matematicas",
          "lectura_critica",
          "ciencias_naturales",
          "sociales_ciudadanas",
          "ingles",
          "dimension_1_logico_matematico",
          "dimension_2_comprension_comunicacion",
          "dimension_3_pensamiento_cientifico",
          "dimension_4_analisis_social_humanistico",
          "dimension_5_creatividad_innovacion",
          "dimension_6_liderazgo_trabajo_equipo",
          "dimension_7_pensamiento_critico",
          "dimension_8_adaptabilidad_aprendizaje"
        ],
        "title": "PredictionInput"
      },
      "PredictionResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_email": {
            "type": "string",
            "format": "email",
            "title": "User Email"
          },
          "predictions": {
            "items": {
              "$ref": "#/components/schemas/AreaPrediction"
            },
            "type": "array",
            "title": "Predictions"
          },
          "model_type": {
            "type": "string",
            "title": "Model Type"
          },
          "model_version": {
            "type": "string",
            "title": "Model Version"
          },
          "processing_time": {
            "type": "number",
            "title": "Processing Time"
          },
          "confidence_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Confidence Score"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_email",
          "predictions",
          "model_type",
          "model_version",
          "processing_time",
          "confidence_score",
          "created_at"
        ],
        "title": "PredictionResponse"
      },
      "TrainingRequestKNN": {
        "properties": {
          "model_type": {
            "type": "string",
            "const": "knn",
            "title": "Model Type",
            "default": "knn"
          },
          "hyperparameters": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hyperparameters"
          },
          "validation_split": {
            "type": "number",
            "maximum": 0.5,
            "minimum": 0.1,
            "title": "Validation Split",
            "default": 0.2
          },
          "force_retrain": {
            "type": "boolean",
            "title": "Force Retrain",
            "description": "Force retraining even if recent model exists",
            "default": false
          }
        },
        "type": "object",
        "title": "TrainingRequestKNN"
      },
      "TrainingRequestNN": {
        "properties": {
          "model_type": {
            "type": "string",
            "const": "neural_network",
            "title": "Model Type",
            "default": "neural_network"
          },
          "hyperparameters": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hyperparameters"
          },
          "validation_split": {
            "type": "number",
            "maximum": 0.5,
            "minimum": 0.1,
            "title": "Validation Split",
            "default": 0.2
          },
          "force_retrain": {
            "type": "boolean",
            "title": "Force Retrain",
            "description": "Force retraining even if recent model exists",
            "default": false
          }
        },
        "type": "object",
        "title": "TrainingRequestNN"
      },
      "TrainingResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "model_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Version"
          },
          "training_accuracy": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Training Accuracy"
          },
          "validation_accuracy": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Validation Accuracy"
          },
          "training_time": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Training Time"
          },
          "model_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Path"
          }
        },
        "type": "object",
        "required": [
          "status",
          "message"
        ],
        "title": "TrainingResponse"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}