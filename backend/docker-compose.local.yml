version: '3.8'

services:
  # PostgreSQL Database for local testing
  postgres:
    image: postgres:15-alpine
    container_name: talentai_postgres_local
    environment:
      POSTGRES_DB: ${DB_POSTGRESDB_DATABASE:-talentai_db}
      POSTGRES_USER: ${DB_POSTGRESDB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_POSTGRESDB_PASSWORD:-root}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./data/talent_ai_backup.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - talentai_local
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_POSTGRESDB_USER:-postgres} -d ${DB_POSTGRESDB_DATABASE:-talentai_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: talentai_backend_local
    environment:
      # Database Configuration
      DATABASE_URL: postgresql://${POSTGRES_USER:-talentai}:${POSTGRES_PASSWORD:-talentai123}@postgres:5432/${POSTGRES_DB:-talentai_db}
      POSTGRES_SERVER: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: talentai_db
      POSTGRES_USER: talentai
      POSTGRES_PASSWORD: talentai123

      
      # Application Configuration
      BASE_DIR: /app
      MODELS_DIR: /app/models
      DATA_DIR: /app/data
      LOGS_DIR: /app/logs
      
      # API Configuration
      API_V1_STR: /api/v1
      PROJECT_NAME: TalentAI Backend API
      VERSION: 1.0.0
      DESCRIPTION: API robusta para predicción de áreas de conocimiento y recomendación de programas académicos
      
      # Security
      SECRET_KEY: your-secret-key-change-in-production
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      
      # CORS
      ALLOWED_HOSTS: '["*"]'
      
      # Logging
      LOG_LEVEL: INFO
      LOG_FORMAT: '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
      
      # Model Configuration
      TOP_PREDICTIONS: 5
      PREDICTION_THRESHOLD: 0.1
      MAX_MODEL_VERSIONS: 5
      
      # Environment
      ENVIRONMENT: development
    volumes:
      - ./data:/app/data:ro
      - models_data:/app/models
      - logs_data:/app/logs
      - ./ml_models:/app/ml_models:ro
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    networks:
      - talentai_local
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

# Networks
networks:
  talentai_local:
    driver: bridge
    name: talentai_local_network

# Volumes
volumes:
  postgres_data:
    driver: local
    name: talentai_postgres_data_local
  
  models_data:
    driver: local
    name: talentai_models_data_local
  
  logs_data:
    driver: local
    name: talentai_logs_data_local