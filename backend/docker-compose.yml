version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: talentai_backend
    environment:
      # Database Configuration - External PostgreSQL
      POSTGRES_SERVER: ${POSTGRES_SERVER:-localhost}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_DB: ${POSTGRES_DB:-talentai_db}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-root}
      ENVIRONMENT: ${ENVIRONMENT:-production}
      # Application Port
      PORT: ${PORT:-8000}
    volumes:
      - ./data:/app/data:ro
      - models_data:/app/models
      - logs_data:/app/logs
      - ./ml_models:/app/ml_models:ro
    ports:
      - "${PORT:-8000}:${PORT:-8000}"
    networks:
      - talentai_network
      - default  # Permite acceso a redes externas
    restart: unless-stopped
    #labels:
    #  - "traefik.enable=true"
    #  - "traefik.http.routers.talentai-backend.rule=Host(`talentai-backend-fki80q-f6db00-144-126-135-34.traefik.me`)"
    #  - "traefik.http.routers.talentai-backend.entrypoints=web"
    #  - "traefik.http.services.talentai-backend.loadbalancer.server.port=8000"
    #  # HTTPS configuration (optional)
    #  - "traefik.http.routers.talentai-backend-secure.rule=Host(`talentai-backend-fki80q-f6db00-144-126-135-34.traefik.me`)"
    #  - "traefik.http.routers.talentai-backend-secure.entrypoints=websecure"
    #  - "traefik.http.routers.talentai-backend-secure.tls=true"
    #  - "traefik.http.routers.talentai-backend-secure.tls.certresolver=myresolver"
    #  - "traefik.http.services.talentai-backend-secure.loadbalancer.server.port=8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT:-8000}/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

# Networks
networks:
  talentai_network:
    driver: bridge
    name: talentai_production_network

# Volumes
volumes:
  models_data:
    driver: local
    name: talentai_models_data_production
  
  logs_data:
    driver: local
    name: talentai_logs_data_production
